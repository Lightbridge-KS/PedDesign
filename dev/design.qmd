---
title: "Design App"
format: html
---

```{r setup, include=FALSE}
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
here::i_am("dev/design.qmd")
library(here)
library(cli)
```

## Input

- `study_type`: "chest", "whole_abd", "chest_whole_abd", "cta_liver"
- `age_group`: "younger_child", "older_child"
- `weight_kg` (kg): numeric 

- `rate_formula`: "no_delay" (default), "delay"

- `iv_location`: "arm" (default), "leg"


## Testing

```{r}
t1 <- list(study_type = "chest", age_group = "older_child",
           weight_kg = 24)


```


## Wrapper: Print Design CT

```{r print_design_ct}
print_design_ct <- function(study_type, 
                            age_group,
                            weight_kg,
                            iv_location =  c("arm", "leg"),
                            rate_formula = c("no_delay", "delay"),
                            delay_sec = NULL
                            ) {
  
  study_type <- match.arg(study_type, 
                          choices = c("chest", "whole_abd",
                                      "chest_whole_abd", "cta_liver"))
  age_group <- match.arg(age_group, 
                         choices = c("younger_child", "older_child"))
  iv_location <- match.arg(iv_location)
  
  cat("-- Design CT --", "\n\n")
  
  # Study Type
  cat(study_type_desc[[study_type]], "\n")
  
  # Weight
  cat("Body weight:", weight_kg, "kg", "\n")
  
  # kV
  kV <- get_kV(weight_kg)
  cat(glue::glue("kV: {kV}"), "\n")
  # mA
  cat("mA: auto", "\n")
  
  # Noise index
  noise_index <- get_noise_index(study_type, age_group)
  cat(glue::glue("Noise index: {noise_index}"), "\n")
  
  # Delay
  cat(print_delay_sec(study_type, iv_location), "\n")
  
  # Contrast (ml/kg)
  contrast_ml <- get_contrast_ml(study_type, weight_kg)
  cat(print_contrast(study_type, weight_kg), "\n")
  
  # Rate (ml/sec)
  cat(print_rate_ml_sec(contrast_ml, 
                    rate_formula = rate_formula, 
                    delay_sec = delay_sec), "\n\n")
  
  cat("---")
  
}

print_design_ct("chest", "younger", 20.5344)

print_design_ct("whole_abd", "younger", 30, "leg") 
```

## List: Study Type Description

```{r study_type_desc}
study_type_desc <- list(
  "chest" = "CT chest, venous only", 
  "whole_abd" = "CT whole abdomen, venous only",
  "chest_whole_abd" = "Venous chest + whole abdomen", 
  "cta_liver" = "CTA liver" 
)
```


## kV

Input: `weight_kg` numeric
Output: kV in Chr

```{r get_kV}
get_kV <- function(weight_kg) {
  
  stopifnot(is.numeric(weight_kg) & weight_kg > 0)
  
  kV <- if(weight_kg < 20) {
    "80"
  } else if (weight_kg == 20) {
    "80 or 100"
  } else if (weight_kg < 45) {
    "100"
  } else if (weight_kg == 45) {
    "100 or 120"
  } else if (weight_kg <= 60) {
    "120"
  } else {
    # weight_kg â‰¥ 60
    "120 ?"
  }
  
  kV
  
}

get_kV(19)
get_kV(20)
get_kV(25)
get_kV(45)
get_kV(55)
get_kV(60)
get_kV(100)
```

## Noise Index

```{r get_noise_index}
get_noise_index <- function(study_type, age_group){
  
  study_type <- match.arg(study_type, 
                          choices = c("chest", "whole_abd",
                                      "chest_whole_abd", "cta_liver"))
  age_group <- match.arg(age_group, 
                         choices = c("younger_child", "older_child"))
  
  ls <- list(
    chest = c(younger_child = "17", older_child = "20"),
    whole_abd = c(younger_child = "15", older_child = "17"),
    chest_whole_abd = c(younger_child = "15", older_child = "17"),
    cta_liver = c(younger_child = "15", older_child = "17")
  )
  
  ls[[study_type]][[age_group]]
  
}

get_noise_index("chest", "younger_child")
get_noise_index("chest", "old")
```


## Delay (sec)

```{r print_delay_sec}
print_delay_sec <- function(study_type, 
                          iv_location =  c("arm", "leg")
                          ){
    
    study_type <- match.arg(study_type, 
                          choices = c("chest", "whole_abd",
                                      "chest_whole_abd", "cta_liver"))
    iv_location <- match.arg(iv_location)
    
    
    delay_sec <- list(
      chest = "Delay: 45 sec", 
      whole_abd = "Delay: 60 or 65 or 70 sec", 
      chest_whole_abd = "Delay: 60 or 65 or 70 sec",  
      cta_liver = "Arterial: 20 sec, Venous: 70 sec"
    )
    
    switch (iv_location,
      "arm" = { cat(delay_sec[[study_type]]) },
      "leg" = { 
        cat(delay_sec[[study_type]], 
            "(If IV access via leg, consider +10 sec)")
      }
    )
    
  
}

print_delay_sec("chest")
print_delay_sec("chest", "leg")
```



## Contrast (ml/kg)

```{r get_contrast_ml_kg}
get_contrast_ml_kg <- function(study_type) {
  
    study_type <- match.arg(study_type, 
                          choices = c("chest", "whole_abd",
                                      "chest_whole_abd", "cta_liver"))
    
    ml_per_kg <- list(chest = 1, 
                      whole_abd = 2, chest_whole_abd = 2, 
                      cta_liver = 2.5)
    
    ml_per_kg[[study_type]]
  
}
get_contrast_ml_kg("cta_liver")
```


## Contrast (ml)

```{r get_contrast_ml}
get_contrast_ml <- function(study_type, weight_kg){
  
  stopifnot(is.numeric(weight_kg) & weight_kg > 0)
  study_type <- match.arg(study_type, 
                          choices = c("chest", "whole_abd",
                                      "chest_whole_abd", "cta_liver"))
  
  contrast_ml_kg <- get_contrast_ml_kg(study_type)
  
  contrast_ml <- contrast_ml_kg * weight_kg
  
  # Maximum contrast = 80 ml
  if (contrast_ml >= 80) return(80)
  
  contrast_ml
  
}

get_contrast_ml("whole", 30)
get_contrast_ml("chest", 700)
```

## Print Contrast

```{r print_contrast}
print_contrast <- function(study_type, weight_kg){
  
  study_type <- match.arg(study_type, 
                          choices = c("chest", "whole_abd",
                                      "chest_whole_abd", "cta_liver"))
  
  contrast_ml_kg <- get_contrast_ml_kg(study_type)
  contrast_ml_precise <- contrast_ml_kg * weight_kg

  contrast_ml <- round(get_contrast_ml(study_type, weight_kg), 1)
  
  show_calc <- glue::glue("({contrast_ml_kg} ml/kg * {weight_kg} kg = {contrast_ml_precise})")
  
  # Max Dose
  if(contrast_ml == 80) {
    glue::glue("Contrast: 80 ml [Maximum] {show_calc}")
  } else {
    glue::glue("Contrast: {contrast_ml} ml {show_calc}")
  }
  
}

print_contrast("chest", 93.444)
print_contrast("whole_abd", 23.56)
```

```{r}
cli_text(paste0("c"), glue::glue("b"))
```


## Rate (ml/sec)

2 formula:

$$
\frac{ Contrast (ml) + 15 }{45}
$$
$$
\frac{ Contrast (ml) + 15 }{delay(s) - 15}
$$

```{r print_rate_ml_sec}
print_rate_ml_sec <- function(contrast_ml, 
                            rate_formula = c("no_delay", "delay"),
                            delay_sec = NULL
                            ) {
  
  rate_formula <- match.arg(rate_formula)
  stopifnot(is.numeric(contrast_ml) & contrast_ml > 0)
  
  # Ceiling 1 decimal
  ceiling_dec <- function(x, level=1) round(x + 5*10^(-level-1), level)

  
  switch (rate_formula,
    "no_delay" = {
      
      rate <- (contrast_ml + 15) / 45 
      rate_adj <- ceiling_dec(rate, 1) # Round up for 1 decimal
      
      show_calc <- glue::glue("({contrast_ml} + 15) / 45 = {round(rate, 2)}")
  
      
      },
    "delay" = { 
      
      stopifnot(is.numeric(delay_sec))
      
      rate <- (contrast_ml + 15) / (delay_sec - 15) 
      rate_adj <- ceiling_dec(rate, 1) # Round up for 1 decimal
      
      show_calc <- glue::glue("({contrast_ml} + 15) / ({delay_sec} - 15) = {round(rate, 2)}")
      
      }
  )
  
  glue::glue("Rate: {rate_adj} ml/sec {show_calc}")
}

print_rate_ml_sec(get_contrast_ml("whole", 30))
print_rate_ml_sec(get_contrast_ml("whole", 30), "delay", 70)
```

```{r}
ceiling_dec <- function(x, level=1) round(x + 5*10^(-level-1), level)

ceiling_dec(2.3344, 1)
ceiling_dec(2.3344)
```



